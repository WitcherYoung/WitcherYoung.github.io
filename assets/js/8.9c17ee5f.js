(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{148:function(t,r,_){"use strict";_.r(r);var a=_(0),e=Object(a.a)({},(function(){var t=this,r=t.$createElement,_=t._self._c||r;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[t._v("ES5的变量类型 总体可以归为两大类( 所有包含的类型 5+1 )")]),t._v(" "),_("blockquote",[_("p",[t._v("基本类型")]),t._v(" "),_("blockquote",[_("p",[t._v("Undefined\nNull\nNumber\nString\nBoolean")])]),t._v(" "),_("p")]),t._v(" "),_("blockquote",[_("p",[t._v("引用类型")]),t._v(" "),_("blockquote",[_("p",[t._v("Object ( Array等都是在Object类型演化而来 )")])]),t._v(" "),_("p")]),t._v(" "),_("hr"),t._v(" "),_("h2",{attrs:{id:"动态属性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#动态属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 动态属性")]),t._v(" "),_("p",[t._v("声明一个变量( 并赋值 ), Object类型可以 后续 添加新属性和方法, 也可以 改变和删除原有属性, 但是 5种基本类型 并不能做到类似 Object类型的动态 增删改 属性")]),t._v(" "),_("hr"),t._v(" "),_("h2",{attrs:{id:"复制变量值"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#复制变量值","aria-hidden":"true"}},[t._v("#")]),t._v(" 复制变量值")]),t._v(" "),_("p",[t._v("复制变量值( 一个变量值赋值给另一个变量 ), 基本类型变量 直接保存 赋值变量的变量值")]),t._v(" "),_("p",[t._v("引用类型变量 保存的是 赋值变量的内存地址( 其实质是一个指针 ), 这两个变量指向的是同一个内训地址中保存的对象\n正因为如此, 改变其中一个变量, 会影响到另一个值")]),t._v(" "),_("hr"),t._v(" "),_("h2",{attrs:{id:"参数传递"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参数传递","aria-hidden":"true"}},[t._v("#")]),t._v(" 参数传递")]),t._v(" "),_("p",[t._v("ECMAScript 中所有函数的参数都是按值传递的。")]),t._v(" "),_("p",[t._v("也就是说，把函数外部的值复制给函数内部的参数，就和把值从一个变量复制到另一个变量一样。")]),t._v(" "),_("p",[t._v("基本类型值的传递如同基本类型变量的复制一样，而 引用类型值的传递，则如同引用类型变量的复制一样。")]),t._v(" "),_("p",[t._v("有不少开发人员在这一点上可能会感到困惑，因为访问变量有按值和按引用两种方式，而__参数只能按值传递__。")]),t._v(" "),_("blockquote",[_("p",[_("strong",[t._v(">>>")]),t._v(" 此处对 "),_("strong",[t._v("参数只能按值传递")]),t._v(" 产生疑问 "),_("router-link",{attrs:{to:"/JavaScript/基础/变量、作用域和内存问题/思考/函数传参.html"}},[t._v("思考传送门")])],1)]),t._v(" "),_("hr"),t._v(" "),_("h2",{attrs:{id:"检测类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#检测类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 检测类型")]),t._v(" "),_("p",[t._v("typeof 操作符     可区分 基本类型\ninstanceof 操作符 可区分 引用类型")]),t._v(" "),_("blockquote",[_("p",[t._v('注意: typeof null 会返回 "object"')])]),t._v(" "),_("p",[t._v("区分变量类型可用 typeof instanceof Object类型原型链上的toString方法\n俩封装一个判断变量类型的方法")]),t._v(" "),_("hr"),t._v(" "),_("h1",{attrs:{id:"本章思考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#本章思考","aria-hidden":"true"}},[t._v("#")]),t._v(" 本章思考:")]),t._v(" "),_("p",[_("router-link",{attrs:{to:"/JavaScript/基础/变量、作用域和内存问题/思考/函数传参.html"}},[t._v("函数传参")])],1)])}),[],!1,null,null,null);r.default=e.exports}}]);