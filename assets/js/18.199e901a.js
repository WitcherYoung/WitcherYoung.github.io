(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{150:function(a,t,s){"use strict";s.r(t);var r=s(0),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"操作数组元素方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作数组元素方法","aria-hidden":"true"}},[a._v("#")]),a._v(" 操作数组元素方法")]),a._v(" "),s("h3",{attrs:{id:"push"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#push","aria-hidden":"true"}},[a._v("#")]),a._v(" push()")]),a._v(" "),s("p",[a._v("在数组尾部推入 数组元素, push()执行后 返回数组长度")]),a._v(" "),s("h3",{attrs:{id:"pop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pop","aria-hidden":"true"}},[a._v("#")]),a._v(" pop()")]),a._v(" "),s("p",[a._v("在数组中取得 最后一项元素, pop()执行后 返回该数组 最后一项 并且这一项从数组中删除, 数组长度也随之改变")]),a._v(" "),s("h3",{attrs:{id:"shift"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shift","aria-hidden":"true"}},[a._v("#")]),a._v(" shift()")]),a._v(" "),s("p",[a._v("在数组中取得 第一项元素, shift()执行后 返回该数组 第一项 并且这一项从数组中删除, 数组长度也随之改变")]),a._v(" "),s("h3",{attrs:{id:"unshift"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unshift","aria-hidden":"true"}},[a._v("#")]),a._v(" unshift()")]),a._v(" "),s("p",[a._v("在数组头部推入 数组元素, unshift()执行后 返回数组长度")]),a._v(" "),s("p",[a._v("对数组操作时, 推入(向数组插入元素)元素 总返回该数组的长度, 取得(从数组删除元素) 总返回取得的这个数组元素")]),a._v(" "),s("h3",{attrs:{id:"栈方法-lifo-后进先出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈方法-lifo-后进先出","aria-hidden":"true"}},[a._v("#")]),a._v(" 栈方法(LIFO,后进先出)")]),a._v(" "),s("pre",[s("code",[a._v("可通过push()和pop()实现\n")])]),a._v(" "),s("h3",{attrs:{id:"队列方法-fifo-先进先出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#队列方法-fifo-先进先出","aria-hidden":"true"}},[a._v("#")]),a._v(" 队列方法(FIFO,先进先出)")]),a._v(" "),s("pre",[s("code",[a._v("可通过shift()和push()实现\n")])]),a._v(" "),s("h1",{attrs:{id:"排序方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排序方法","aria-hidden":"true"}},[a._v("#")]),a._v(" 排序方法")]),a._v(" "),s("h3",{attrs:{id:"reverse"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reverse","aria-hidden":"true"}},[a._v("#")]),a._v(" reverse()")]),a._v(" "),s("p",[a._v("数组元素反转\nvar arr = [1,3.2,5.4]\narr.reverse();  //[4,5,2,3,1]")]),a._v(" "),s("h3",{attrs:{id:"sort"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sort","aria-hidden":"true"}},[a._v("#")]),a._v(" sort()")]),a._v(" "),s("p",[a._v("数组排序, sort中自定义比较函数确定排序方法, 比较函数返回值通过正数,负数,或0来确定最终排序\n比较函数接收两个参数(a,b), 若a-b<0, 则a在b之前, 否则a在b之后; 若a-b==0那么这两个参数相等")]),a._v(" "),s("p",[a._v("操作方法")]),a._v(" "),s("h3",{attrs:{id:"concat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concat","aria-hidden":"true"}},[a._v("#")]),a._v(" concat()")]),a._v(" "),s("p",[a._v("数组合并, 不改变原数组")]),a._v(" "),s("h3",{attrs:{id:"slice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slice","aria-hidden":"true"}},[a._v("#")]),a._v(" slice()")]),a._v(" "),s("p",[a._v("截取数组中的部分元素, 形成新数组, 和concat()一样不改变原数组, slice() 函数接收两个参数\nslice(a, b), a表示起始位置, b表示结束位置( 但是新数组不会包含结束位置 对应的数组元素 )")]),a._v(" "),s("h3",{attrs:{id:"splice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#splice","aria-hidden":"true"}},[a._v("#")]),a._v(" splice()")]),a._v(" "),s("p",[a._v("有很多用法, 可以删除, 插入, 替换数组元素, splice()会改变原数组\n删除: 提供2个参数splice(a, b), a表示元素的索引(即 要从数组的什么位置开始删除), b表示要删除的数量")]),a._v(" "),s("pre",[s("code",[a._v("插入: 提供3个参数splice(a, 0, c), a表示起始位置(数组索引), 0表示要删除的数量(不删除,再原数组元素不变的情况下 插入数组), c表示要插入的元素, 如果要插入多个值可以继续传参\n\n替换: 提供3个参数splice(a, b, c), a表示起始位置(数组索引), b表示要删除的数量(可以删除任意数量的元素), c表示要插入的元素, 如果要插入多个值可以继续传参\n")])]),a._v(" "),s("h1",{attrs:{id:"位置方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#位置方法","aria-hidden":"true"}},[a._v("#")]),a._v(" 位置方法")]),a._v(" "),s("h3",{attrs:{id:"indexof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#indexof","aria-hidden":"true"}},[a._v("#")]),a._v(" indexOf()")]),a._v(" "),s("p",[a._v("接收两个参数, 要查找的项和(可选的)查找其实位置的索引,从数组开头(位置0)向后查找")]),a._v(" "),s("h3",{attrs:{id:"lastindexof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lastindexof","aria-hidden":"true"}},[a._v("#")]),a._v(" lastIndexOf()")]),a._v(" "),s("p",[a._v("接收两个参数, 要查找的项和(可选的)查找其实位置的索引,从数组末尾开始向前查账")]),a._v(" "),s("h1",{attrs:{id:"迭代方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#迭代方法","aria-hidden":"true"}},[a._v("#")]),a._v(" 迭代方法")]),a._v(" "),s("p",[a._v("5个迭代方法, 每个方法都接收两个参数, 要在每一项上运行的函数和(可选的)运行该函数的作用域对象——影响this的值\n传入这些方法中的函数会接收三个参数：数组项的值、该项在数组中的位置 和 数组对象本身")]),a._v(" "),s("h3",{attrs:{id:"every"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#every","aria-hidden":"true"}},[a._v("#")]),a._v(" every()")]),a._v(" "),s("p",[a._v("对数组中的每一项运行给定函数, 如果该函数对每一项都返回 true, 则返回 true")]),a._v(" "),s("h3",{attrs:{id:"some"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#some","aria-hidden":"true"}},[a._v("#")]),a._v(" some()")]),a._v(" "),s("p",[a._v("对数组中的每一项运行给定函数, 如果该函数对任意一项返回 true, 则返回 true")]),a._v(" "),s("h3",{attrs:{id:"filter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#filter","aria-hidden":"true"}},[a._v("#")]),a._v(" filter()")]),a._v(" "),s("p",[a._v("对数组中的每一项运行给定函数, 返回该函数会返回true的项组成的数组")]),a._v(" "),s("h3",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map","aria-hidden":"true"}},[a._v("#")]),a._v(" map()")]),a._v(" "),s("p",[a._v("对数组中的每一项运行给定函数, 返回每次函数调用的结果组成的数组")]),a._v(" "),s("h3",{attrs:{id:"foreach"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#foreach","aria-hidden":"true"}},[a._v("#")]),a._v(" forEach()")]),a._v(" "),s("p",[a._v("对数组中的每一项运行给定函数, 这个方法没有返回值")]),a._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",[a._v("在这5个函数中every(), some()返回Boolean值, filter(), map()返回数组, forEach()没有返回值")]),a._v(" "),s("p",[a._v("如果要将 数组中的全部元素 与 某一值作比较, 那么every(),some()是及其合适的,\n不同的是\nevery()函数 只有全部元素比对后 都为true时 返回true(与&&类似)\nsome()函数  全部元素比对后 有一项元素为true时 返回true(与||类似)")]),a._v(" "),s("p",[a._v("filter()函数更像是过滤功能, 可以取出数组中某些符合条件的元素, filter()会返回一个新的数组")]),a._v(" "),s("p",[a._v("map()函数则会对数组的所有元素生效 即 map()可以对函数的所有元素做相同操作")]),a._v(" "),s("p",[a._v("forEach()函数本质上与for循环遍历数组时一样的")])]),a._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" numbers2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("53")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("45")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nnumbers2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("item"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" item "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("numbers2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//item在forEach函数中,值始终为numbers2数组元素的初始值")]),a._v("\n")])])]),s("p",[a._v("(思考遍历数组时,用forEach()替代for循环是否在所有场景下都适合?)")]),a._v(" "),s("h1",{attrs:{id:"归并方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#归并方法","aria-hidden":"true"}},[a._v("#")]),a._v(" 归并方法")]),a._v(" "),s("p",[a._v("接收4个参数, 前一个值、当前值、项的索引和数组对象 (prev, cur, index, array)\n这个函数返回的任何值都会作为第一个参数自动传给下一项。第一次迭代发生在数组的第二项上，因此第 一个参数是数组的第一项，第二个参数就是数组的第二项")]),a._v(" "),s("h3",{attrs:{id:"reduce"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reduce","aria-hidden":"true"}},[a._v("#")]),a._v(" reduce()")]),a._v(" "),s("p",[a._v("从第一项遍历到最后一项")]),a._v(" "),s("h3",{attrs:{id:"reduceright"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reduceright","aria-hidden":"true"}},[a._v("#")]),a._v(" reduceRight()")]),a._v(" "),s("p",[a._v("从最后一项遍历到第一项")])])}),[],!1,null,null,null);t.default=e.exports}}]);